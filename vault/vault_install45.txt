シークレットは名前空間にバインドされています

Vault Kubernetes 認証ロールで定義された名前空間以外の名前空間で実行されるポッドは、そのパスで定義されたシークレットにアクセスできません。

offsite名前空間を作成します。
minikube kubectl -- create namespace offsite

[anjack@110master vault]$ minikube kubectl -- create namespace offsite
namespace/offsite created

現在のコンテキストをオフサイトの名前空間に設定します。
minikube kubectl -- config set-context --current --namespace offsite

[anjack@110master vault]$ minikube kubectl -- config set-context --current --namespace offsite
Context "minikube" modified.

internal-appオフサイトの名前空間で指定された Kubernetes サービス アカウントを作成します。
minikube kubectl -- create sa internal-app

[anjack@110master vault]$ minikube kubectl -- create sa internal-app
serviceaccount/internal-app created


アプリケーションのデプロイメントを表示しissuesます。
deployment-issues.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: issues
  labels:
    app: issues
spec:
  selector:
    matchLabels:
      app: issues
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}
      labels:
        app: issues
    spec:
      serviceAccountName: internal-app
      containers:
        - name: issues
          image: jweissig/app:0.0.1


で定義した配置を適用しdeployment-issues.yamlます。
minikube kubectl -- apply --filename deployment-issues.yaml

[anjack@110master vault]$ minikube kubectl -- apply --filename deployment-issues.yaml
deployment.apps/issues created


オフサイトの名前空間にあるすべてのポッドを取得します。
minikube kubectl -- get pods -o wide

[anjack@110master vault]$ minikube kubectl -- get pods -o wide
NAME                      READY   STATUS     RESTARTS   AGE   IP           NODE       NOMINATED NODE   READINESS GATES
issues-544fcf6889-jrkvj   0/2     Init:0/1   0          21s   172.17.0.7   minikube   <none>           <none>


ポッドvault-agent-init内のコンテナーのログを表示します。issues
minikube kubectl -- logs \
    $(minikube kubectl -- get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
    --container vault-agent-init

名前空間が承認されていないため、初期化プロセスは失敗します。

[anjack@110master vault]$ minikube kubectl -- logs \
>     $(minikube kubectl -- get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container vault-agent-init
==> Vault agent started! Log data will stream in below:

==> Vault agent configuration:

                     Cgo: disabled
               Log Level: info
                 Version: Vault v1.12.0, built 2022-10-10T18:14:33Z
             Version Sha: 558abfa75702b5dab4c98e86b802fb9aef43b0eb

2022-11-24T01:46:18.560Z [INFO]  sink.file: creating file sink
2022-11-24T01:46:18.560Z [INFO]  sink.file: file sink configured: path=/home/vault/.vault-token mode=-rw-r-----
2022-11-24T01:46:18.560Z [INFO]  template.server: starting template server
2022-11-24T01:46:18.560Z [INFO]  sink.server: starting sink server
2022-11-24T01:46:18.560Z [INFO]  auth.handler: starting auth handler
2022-11-24T01:46:18.560Z [INFO] (runner) creating new runner (dry: false, once: false)
2022-11-24T01:46:18.560Z [INFO]  auth.handler: authenticating
2022-11-24T01:46:18.561Z [INFO] (runner) creating watcher
2022-11-24T01:46:18.564Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=1s
2022-11-24T01:46:19.564Z [INFO]  auth.handler: authenticating
2022-11-24T01:46:19.567Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=1.6s
2022-11-24T01:46:21.175Z [INFO]  auth.handler: authenticating
2022-11-24T01:46:21.176Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=2.83s
2022-11-24T01:46:24.015Z [INFO]  auth.handler: authenticating
2022-11-24T01:46:24.016Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=5.32s
2022-11-24T01:46:29.340Z [INFO]  auth.handler: authenticating
2022-11-24T01:46:29.341Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=9.7s
2022-11-24T01:46:39.045Z [INFO]  auth.handler: authenticating
2022-11-24T01:46:39.049Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=15.11s
2022-11-24T01:46:54.166Z [INFO]  auth.handler: authenticating
2022-11-24T01:46:54.168Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=23.03s


vault-0デフォルトの名前空間のポッドでインタラクティブ シェル セッションを開始します。
minikube kubectl -- exec --namespace default -it vault-0 -- /bin/sh

[anjack@110master vault]$ minikube kubectl -- exec --namespace default -it vault-0 -- /bin/sh
/ $

という名前の Kubernetes 認証ロールを作成しますoffsite-app。
vault write auth/kubernetes/role/offsite-app \
    bound_service_account_names=internal-app \
    bound_service_account_namespaces=offsite \
    policies=internal-app \
    ttl=24h

/ $ vault write auth/kubernetes/role/offsite-app \
>     bound_service_account_names=internal-app \
>     bound_service_account_namespaces=offsite \
>     policies=internal-app \
>     ttl=24h
Success! Data written to: auth/kubernetes/role/offsite-app


vault-0ポッドを終了します。
exit

/ $ exit
[anjack@110master vault]$


展開パッチを表示しpatch-issues.yamlます。

patch-issues.yaml

spec:
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/role: 'offsite-app'
        vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}

issuesで定義されたデプロイメントにパッチを適用しpatch-issues.yamlます。
minikube kubectl -- patch deployment issues --patch "$(cat patch-issues.yaml)"

[anjack@110master vault]$ minikube kubectl -- patch deployment issues --patch "$(cat patch-issues.yaml)"
deployment.apps/issues patched


オフサイトの名前空間にあるすべてのポッドを取得します。
minikube kubectl -- get pods -o wide

[anjack@110master vault]$ minikube kubectl -- get pods -o wide
NAME                      READY   STATUS    RESTARTS   AGE   IP           NODE       NOMINATED NODE   READINESS GATES
issues-7f5d8698f6-9wf92   2/2     Running   0          25s   172.17.0.9   minikube   <none>           <none>


最後に、ポッド内のissuesコンテナーに書き込まれたシークレットを表示します。issues
minikube kubectl -- exec \
    $(minikube kubectl -- get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
    --container issues -- cat /vault/secrets/database-config.txt

[anjack@110master vault]$ minikube kubectl -- exec \
>     $(minikube kubectl -- get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container issues -- cat /vault/secrets/database-config.txt
postgresql://db-readonly-username:db-secret-password@postgres:5432/wizard[anjack@110master vault]$















