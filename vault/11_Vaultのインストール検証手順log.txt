
[testuser@60master storageclass]$ ls
2test.yaml  deploy_nginx.yaml  local-storage.yaml  misstake  persistentvolume  volume_clain.yaml
[testuser@60master storageclass]$ mkdir old_12132
[testuser@60master storageclass]$ mv 2test.yaml deploy_nginx.yaml local-storage.yaml volume_clain.yaml old_1212
[testuser@60master storageclass]$ ls
misstake  old_1212  persistentvolume
[testuser@60master storageclass]$ cat > local-storage.yaml << EOF
> apiVersion: storage.k8s.io/v1
> kind: StorageClass
> metadata:
>   name: local-storage
> provisioner: kubernetes.io/no-provisioner
> volumeBindingMode: WaitForFirstConsumer
> EOF
[testuser@60master storageclass]$ kubectl apply -f local-storage.yaml
storageclass.storage.k8s.io/local-storage created
[testuser@60master storageclass]$ kubectl get sc
NAME            PROVISIONER                    RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
local-storage   kubernetes.io/no-provisioner   Delete          WaitForFirstConsumer   false                  12s
[testuser@60master storageclass]$ kubectl get nodes
NAME                 STATUS   ROLES           AGE     VERSION
60master.test.com   Ready    control-plane   4d15h   v1.25.4
60node01.test.com   Ready    <none>          4d15h   v1.25.4
60node02.test.com   Ready    <none>          4d15h   v1.25.4
[testuser@60master storageclass]$ grep -n " name:" persistentvolume
grep: persistentvolume: ディレクトリです
[testuser@60master storageclass]$ grep -n " name:" persistentvolume/*
persistentvolume/pv01.yaml:4:  name: pv01
persistentvolume/pv02.yaml:4:  name: pv02
persistentvolume/pv03.yaml:4:  name: pv03
persistentvolume/pv04.yaml:4:  name: pv04
[testuser@60master storageclass]$ 
[testuser@60master storageclass]$ grep -n " name:" persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/*persistentvolume/* persistentvolume/*p persistentvolume/*e persistentvolume/*r persistentvolume/*s persistentvolume/*i persistentvolume/*s persistentvolume/*t persistentvolume/*e persistentvolume/*n persistentvolume/*t persistentvolume/*v persistentvolume/*o persistentvolume/*l persistentvolume/*u persistentvolume/*m persistentvolume/*e persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/* persistentvolume/*v persistentvolume/*a persistentvolume/*l persistentvolume/*u persistentvolume/*e persistentvolume/*s persistentvolume/*-a1 
persistentvolume/pv01.yaml-20-          operator: In
persistentvolume/pv01.yaml:21:          values:
persistentvolume/pv01.yaml-22-          - 60node01.test.com
--
persistentvolume/pv02.yaml-20-          operator: In
persistentvolume/pv02.yaml:21:          values:
persistentvolume/pv02.yaml-22-          - 60node01.test.com
--
persistentvolume/pv03.yaml-20-          operator: In
persistentvolume/pv03.yaml:21:          values:
persistentvolume/pv03.yaml-22-          - 60node02.test.com
--
persistentvolume/pv04.yaml-20-          operator: In
persistentvolume/pv04.yaml:21:          values:
persistentvolume/pv04.yaml-22-          - 60node02.test.com
[testuser@60master storageclass]$ 
[testuser@60master storageclass]$ ls -l persistentvolume/
合計 16
-rw-rw-r-- 1 testuser testuser 455 12月 11 19:15 pv01.yaml
-rw-rw-r-- 1 testuser testuser 455 12月 11 19:17 pv02.yaml
-rw-rw-r-- 1 testuser testuser 455 12月 11 19:18 pv03.yaml
-rw-rw-r-- 1 testuser testuser 455 12月 11 19:20 pv04.yaml
[testuser@60master storageclass]$ 
[testuser@60master storageclass]$ 
[testuser@60master storageclass]$ kubectl apply -f persistentvolume
persistentvolume/pv01 created
persistentvolume/pv02 created
persistentvolume/pv03 created
persistentvolume/pv04 created
[testuser@60master storageclass]$ kubectl get sc,pv
NAME                                        PROVISIONER                    RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
storageclass.storage.k8s.io/local-storage   kubernetes.io/no-provisioner   Delete          WaitForFirstConsumer   false                  8m40s

NAME                    CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS    REASON   AGE
persistentvolume/pv01   10Gi       RWO            Delete           Available           local-storage            51s
persistentvolume/pv02   10Gi       RWO            Delete           Available           local-storage            51s
persistentvolume/pv03   10Gi       RWO            Delete           Available           local-storage            51s
persistentvolume/pv04   10Gi       RWO            Delete           Available           local-storage            51s
[testuser@60master storageclass]$ 
[testuser@60master storageclass]$ 
[testuser@60master storageclass]$ cd
[testuser@60master ~]$ ls
calico  setup.bash  test  vault
[testuser@60master ~]$ cd vault/
[testuser@60master vault]$ ls
raft  sidecar  vault-secret.yaml
[testuser@60master vault]$ cd raft/
[testuser@60master raft]$ ls
cluster-keys.json  deployment-01-webapp.yml  deployment-02-webapp.yml  helm-vault-raft-values.yml  storageclass-values.yml
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ storageclass-values.yml
-bash: storageclass-values.yml: コマンドが見つかりません
[testuser@60master raft]$ cat storageclass-values.yml
server:
  affinity: ""
  dataStorage:
    storageClass: local-storage
  ha:
    enabled: true
    raft:
      enabled: true
[testuser@60master raft]$ helm install vault hashicorp/vault -n vault --values storageclass-values.yml
Error: INSTALLATION FAILED: create: failed to create: namespaces "vault" not found
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl create ns vault
namespace/vault created
[testuser@60master raft]$ kubectl get ns vault
NAME    STATUS   AGE
vault   Active   14s
[testuser@60master raft]$ helm install vault hashicorp/vault -n vault --values storageclass-values.yml
NAME: vault
LAST DEPLOYED: Tue Dec 13 09:43:57 2022
NAMESPACE: vault
STATUS: deployed
REVISION: 1
NOTES:
Thank you for installing HashiCorp Vault!

Now that you have deployed Vault, you should look over the docs on using
Vault with Kubernetes available here:

https://www.vaultproject.io/docs/


Your release is named vault. To learn more about the release, try:

  $ helm status vault
  $ helm get manifest vault
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault get allkubectl -n vault get sc,pv,pvc
NAME                                        PROVISIONER                    RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
storageclass.storage.k8s.io/local-storage   kubernetes.io/no-provisioner   Delete          WaitForFirstConsumer   false                  16m

NAME                    CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                STORAGECLASS    REASON   AGE
persistentvolume/pv01   10Gi       RWO            Delete           Bound       vault/data-vault-0   local-storage            8m46s
persistentvolume/pv02   10Gi       RWO            Delete           Available                        local-storage            8m46s
persistentvolume/pv03   10Gi       RWO            Delete           Bound       vault/data-vault-1   local-storage            8m46s
persistentvolume/pv04   10Gi       RWO            Delete           Bound       vault/data-vault-2   local-storage            8m46s

NAME                                 STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS    AGE
persistentvolumeclaim/data-vault-0   Bound    pv01     10Gi       RWO            local-storage   44s
persistentvolumeclaim/data-vault-1   Bound    pv03     10Gi       RWO            local-storage   41s
persistentvolumeclaim/data-vault-2   Bound    pv04     10Gi       RWO            local-storage   40s
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault get all
NAME                                        READY   STATUS    RESTARTS   AGE
pod/vault-0                                 0/1     Running   0          60s
pod/vault-1                                 0/1     Running   0          59s
pod/vault-2                                 0/1     Running   0          58s
pod/vault-agent-injector-59b9c84fd8-zdnkq   1/1     Running   0          63s

NAME                               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE
service/vault                      ClusterIP   10.110.74.185   <none>        8200/TCP,8201/TCP   64s
service/vault-active               ClusterIP   10.108.49.116   <none>        8200/TCP,8201/TCP   64s
service/vault-agent-injector-svc   ClusterIP   10.110.6.129    <none>        443/TCP             64s
service/vault-internal             ClusterIP   None            <none>        8200/TCP,8201/TCP   64s
service/vault-standby              ClusterIP   10.105.253.24   <none>        8200/TCP,8201/TCP   64s

NAME                                   READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/vault-agent-injector   1/1     1            1           64s

NAME                                              DESIRED   CURRENT   READY   AGE
replicaset.apps/vault-agent-injector-59b9c84fd8   1         1         1       64s

NAME                     READY   AGE
statefulset.apps/vault   0/3     64s
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault get pods -o wide
NAME                                    READY   STATUS    RESTARTS   AGE    IP              NODE                 NOMINATED NODE   READINESS GATES
vault-0                                 0/1     Running   0          97s    10.10.212.166   60node01.test.com   <none>           <none>
vault-1                                 0/1     Running   0          96s    10.10.111.146   60node02.test.com   <none>           <none>
vault-2                                 0/1     Running   0          95s    10.10.111.147   60node02.test.com   <none>           <none>
vault-agent-injector-59b9c84fd8-zdnkq   1/1     Running   0          100s   10.10.212.165   60node01.test.com   <none>           <none>
[testuser@60master raft]$ ls
cluster-keys.json  deployment-01-webapp.yml  deployment-02-webapp.yml  helm-vault-raft-values.yml  storageclass-values.yml
[testuser@60master raft]$ rm cluster-keys.json
[testuser@60master raft]$ kubectl -n vault exec vault-0 -- vault operator init \
>     -key-shares=1 \
>     -key-threshold=1 \
>     -format=json > cluster-keys.json
[testuser@60master raft]$ 
[testuser@60master raft]$ cat cluster-keys.json 
{
  "unseal_keys_b64": [
    "4QVoWlarF7xgQrN/JOi692RgilTMEtEPPN/k9Tz8tes="
  ],
  "unseal_keys_hex": [
    "e105685a56ab17bc6042b37f24e8baf764608a54cc12d10f3cdfe4f53cfcb5eb"
  ],
  "unseal_shares": 1,
  "unseal_threshold": 1,
  "recovery_keys_b64": [],
  "recovery_keys_hex": [],
  "recovery_keys_shares": 0,
  "recovery_keys_threshold": 0,
  "root_token": "hvs.BhpXA4TsjYVuyvt3nWUhdc4l"
}
[testuser@60master raft]$ jq -r ".unseal_keys_b64[]" cluster-keys.json
4QVoWlarF7xgQrN/JOi692RgilTMEtEPPN/k9Tz8tes=
[testuser@60master raft]$ VAULT_UNSEAL_KEY=$(jq -r ".unseal_keys_b64[]" cluster-keys.json)
[testuser@60master raft]$ echo $VAULT_UNSEAL_KEY
4QVoWlarF7xgQrN/JOi692RgilTMEtEPPN/k9Tz8tes=
[testuser@60master raft]$ kubectl -n vault exec vault-0 -- vault operator unseal $VAULT_UNSEAL_KEY
Key                     Value
---                     -----
Seal Type               shamir
Initialized             true
Sealed                  false
Total Shares            1
Threshold               1
Version                 1.12.1
Build Date              2022-10-27T12:32:05Z
Storage Type            raft
Cluster Name            vault-cluster-24667e04
Cluster ID              c78e2201-797f-f148-2de6-75a3c4c2d70f
HA Enabled              true
HA Cluster              n/a
HA Mode                 standby
Active Node Address     <none>
Raft Committed Index    32
Raft Applied Index      31
[testuser@60master raft]$ kubectl -n vault exec -ti vault-1 -- vault operator raft join http://vault-0.vault-internal:8200
Key       Value
---       -----
Joined    true
[testuser@60master raft]$ kubectl -n vault exec -ti vault-2 -- vault operator raft join http://vault-0.vault-internal:8200
Key       Value
---       -----
Joined    true
[testuser@60master raft]$ kubectl -n vault get pods
NAME                                    READY   STATUS    RESTARTS   AGE
vault-0                                 1/1     Running   0          7m40s
vault-1                                 0/1     Running   0          7m39s
vault-2                                 0/1     Running   0          7m38s
vault-agent-injector-59b9c84fd8-zdnkq   1/1     Running   0          7m43s
[testuser@60master raft]$ kubectl -n vault exec -ti vault-1 -- vault operator unseal $VAULT_UNSEAL_KEY
Key                Value
---                -----
Seal Type          shamir
Initialized        true
Sealed             true
Total Shares       1
Threshold          1
Unseal Progress    0/1
Unseal Nonce       n/a
Version            1.12.1
Build Date         2022-10-27T12:32:05Z
Storage Type       raft
HA Enabled         true
[testuser@60master raft]$ kubectl -n vault exec -ti vault-2 -- vault operator unseal $VAULT_UNSEAL_KEY
Key                Value
---                -----
Seal Type          shamir
Initialized        true
Sealed             true
Total Shares       1
Threshold          1
Unseal Progress    0/1
Unseal Nonce       n/a
Version            1.12.1
Build Date         2022-10-27T12:32:05Z
Storage Type       raft
HA Enabled         true
[testuser@60master raft]$ kubectl -n vault get pods
NAME                                    READY   STATUS    RESTARTS   AGE
vault-0                                 1/1     Running   0          8m18s
vault-1                                 1/1     Running   0          8m17s
vault-2                                 1/1     Running   0          8m16s
vault-agent-injector-59b9c84fd8-zdnkq   1/1     Running   0          8m21s
[testuser@60master raft]$ kubectl -n vault exec vault-0 -- vault status
Key                     Value
---                     -----
Seal Type               shamir
Initialized             true
Sealed                  false
Total Shares            1
Threshold               1
Version                 1.12.1
Build Date              2022-10-27T12:32:05Z
Storage Type            raft
Cluster Name            vault-cluster-24667e04
Cluster ID              c78e2201-797f-f148-2de6-75a3c4c2d70f
HA Enabled              true
HA Cluster              https://vault-0.vault-internal:8201
HA Mode                 active
Active Since            2022-12-13T00:49:45.166400029Z
Raft Committed Index    40
Raft Applied Index      40
[testuser@60master raft]$ ls -l
合計 20
-rw-rw-r-- 1 testuser testuser 391 12月 13 09:48 cluster-keys.json
-rw-rw-r-- 1 testuser testuser 625 12月 12 15:07 deployment-01-webapp.yml
-rw-rw-r-- 1 testuser testuser 649 12月 12 17:59 deployment-02-webapp.yml
-rw-rw-r-- 1 testuser testuser  78 12月 10 23:08 helm-vault-raft-values.yml
-rw-rw-r-- 1 testuser testuser 124 12月 11 19:24 storageclass-values.yml
[testuser@60master raft]$ jq -r ".root_token" cluster-keys.json
hvs.BhpXA4TsjYVuyvt3nWUhdc4l
[testuser@60master raft]$ jq -r ".root_token" cluster-keys.jsonls -l
合計 20
-rw-rw-r-- 1 testuser testuser 391 12月 13 09:48 cluster-keys.json
-rw-rw-r-- 1 testuser testuser 625 12月 12 15:07 deployment-01-webapp.yml
-rw-rw-r-- 1 testuser testuser 649 12月 12 17:59 deployment-02-webapp.yml
-rw-rw-r-- 1 testuser testuser  78 12月 10 23:08 helm-vault-raft-values.yml
-rw-rw-r-- 1 testuser testuser 124 12月 11 19:24 storageclass-values.yml
[testuser@60master raft]$ kubectl -n vault exec --stdin=true --tty=true vault-0 -- /bin/sh
/ $ / $ vault login
Token (will be hidden): 
Success! You are now authenticated. The token information displayed below
is already stored in the token helper. You do NOT need to run "vault login"
again. Future Vault requests will automatically use this token.

Key                  Value
---                  -----
token                hvs.BhpXA4TsjYVuyvt3nWUhdc4l
token_accessor       ReFbbxCR3vf88YwCHYc558iu
token_duration       ∞
token_renewable      false
token_policies       ["root"]
identity_policies    []
policies             ["root"]
/ $ vault secrets enable -path=secret kv-v2
Success! Enabled the kv-v2 secrets engine at: secret/
/ $ vault kv put secret/webapp/config username="static-user" password="static-password"
====== Secret Path ======
secret/data/webapp/config

======= Metadata =======
Key                Value
---                -----
created_time       2022-12-13T00:56:08.778197754Z
custom_metadata    <nil>
deletion_time      n/a
destroyed          false
version            1
/ $ vault kv get secret/webapp/config
====== Secret Path ======
secret/data/webapp/config

======= Metadata =======
Key                Value
---                -----
created_time       2022-12-13T00:56:08.778197754Z
custom_metadata    <nil>
deletion_time      n/a
destroyed          false
version            1

====== Data ======
Key         Value
---         -----
password    static-password
username    static-user
/ $ exit
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault exec --stdin=true --tty=true vault-0 -- /bin/sh
/ $ / $ vault auth enable kubernetes
Success! Enabled kubernetes auth method at: kubernetes/
/ $ vault write auth/kubernetes/config \
>     kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443"
Success! Data written to: auth/kubernetes/config
/ $ vault write auth/kubernetes/role/webapp \
>         bound_service_account_names="webapp" \
>         bound_service_account_namespaces="webapp" \
>         policies=webapp \
>         ttl=24h
Success! Data written to: auth/kubernetes/role/webapp
/ $ exit
[testuser@60master raft]$ ls
cluster-keys.json  deployment-01-webapp.yml  deployment-02-webapp.yml  helm-vault-raft-values.yml  storageclass-values.yml
[testuser@60master raft]$ rm deployment-01-webapp.yml
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl create ns webapp
namespace/webapp created
[testuser@60master raft]$ kubectl get ns webapp
NAME     STATUS   AGE
webapp   Active   11s
[testuser@60master raft]$ kubectl -n webapp get sa
NAME      SECRETS   AGE
default   0         69s
[testuser@60master raft]$ kubectl -n webapp create sa webapp
serviceaccount/webapp created
[testuser@60master raft]$ kubectl -n webapp get sa
NAME      SECRETS   AGE
default   0         113s
webapp    0         6s
[testuser@60master raft]$ cat > deployment-01-webapp.yml << EOF
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   name: webapp
>   labels:
>     app: webapp
> spec:
>   replicas: 1
>   selector:
>     matchLabels:
>       app: webapp
>   template:
>     metadata:
>       labels:
>         app: webapp
>     spec:
>       serviceAccountName: webapp
>       containers:
>         - name: app
>           image: burtlo/exampleapp-ruby:k8s
>           imagePullPolicy: Always
>           env:
>             - name: VAULT_ADDR
>               value: 'http://vault:8200'
>             - name: JWT_PATH
>               value: '/var/run/secrets/kubernetes.io/serviceaccount/token'
>             - name: SERVICE_PORT
>               value: '8080'
> EOF
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ cat > deployment-01-webapp.yml << EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      serviceAccountName: webapp
      containers:
        - name: app
          image: burtlo/exampleapp-ruby:k8s
          imagePullPolicy: Always
          env:
            - name: VAULT_ADDR
              value: 'http://vault:8200'
            - name: JWT_PATH
              value: '/var/run/secrets/kubernetes.io/serviceaccount/token'
            - name: SERVICE_PORT
              value: '8080'
EOF
kubectl -n webapp get sa



create sa webappget saget ns webappcreaterm deployment-01-webapp.yml
[testuser@60master raft]$ cat > deployment-01-webapp.yml << EOF
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   name: webapp
>   labels:
>     app: webapp
> spec:
>   replicas: 1
>   selector:
>     matchLabels:
>       app: webapp
>   template:
>     metadata:
>       labels:
>         app: webapp
>     spec:
>       serviceAccountName: webapp
>       containers:
>         - name: app
>           image: burtlo/exampleapp-ruby:k8s
>           imagePullPolicy: Always
>           env:
>             - name: VAULT_ADDR
>               value: 'http://vault.vault.svc.cluster.local:8200'
>             - name: JWT_PATH
>               value: '/var/run/secrets/kubernetes.io/serviceaccount/token'
>             - name: SERVICE_PORT
>               value: '8080'
> EOF
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault apply --filename deployment-01-webapp.yml^C
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n webapp apply --filename deployment-01-webapp.yml
deployment.apps/webapp created
[testuser@60master raft]$ kubectl -n webapp get pods
NAME                      READY   STATUS    RESTARTS   AGE
webapp-74996f8d55-cvzbb   1/1     Running   0          10s
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ curl http://localhost:8080
<h1>Internal Server Error</h1>[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault exec --stdin=true --tty=true vault-0 -- /bin/sh
/ $ / $ vault write auth/kubernetes/role/webapp \
>         bound_service_account_names="*" \
>         bound_service_account_namespaces="*" \
>         policies=webapp \
>         ttl=24h
Success! Data written to: auth/kubernetes/role/webapp
/ $ exit
[testuser@60master raft]$ curl http://localhost:8080
<h1>Internal Server Error</h1>[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault exec --stdin=true --tty=true vault-0 -- /bin/sh
/ $ / $ vault auth enable kubernetes
Error enabling kubernetes auth: Error making API request.

URL: POST http://127.0.0.1:8200/v1/sys/auth/kubernetes
Code: 400. Errors:

* path is already in use at kubernetes/
/ $ vault write auth/kubernetes/config \
>     kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443"
Success! Data written to: auth/kubernetes/config
/ $ vault policy write webapp - <<EOF
> path "secret/data/webapp/config" {
>   capabilities = ["read"]
> }
> EOF
Success! Uploaded policy: webapp
/ $ vault write auth/kubernetes/role/webapp \
>         bound_service_account_names="*" \
>         bound_service_account_namespaces="*" \
>         policies=webapp \
>         ttl=24h
Success! Data written to: auth/kubernetes/role/webapp
/ $ 
/ $ exit
[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ curl http://localhost:8080
{"password"=>"static-password", "username"=>"static-user"}[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ kubectl -n vault exec --stdin=true --tty=true vault-0 -- /bin/sh
/ $ / $ vault write auth/kubernetes/role/webapp \
>         bound_service_account_names=webapp \
>         bound_service_account_namespaces=webapp \
>         policies=webapp \
>         ttl=24h
Success! Data written to: auth/kubernetes/role/webapp
/ $ 
/ $ 
/ $ exit
[testuser@60master raft]$ curl http://localhost:8080
{"password"=>"static-password", "username"=>"static-user"}[testuser@60master raft]$ 
[testuser@60master raft]$ 
[testuser@60master raft]$ 