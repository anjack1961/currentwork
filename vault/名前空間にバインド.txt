シークレットは名前空間にバインドされています

kubectl create namespace offsite

kubectl -n offsite create sa internal-app

vi deployment-issues.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: issues
  labels:
    app: issues
spec:
  selector:
    matchLabels:
      app: issues
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}
      labels:
        app: issues
    spec:
      serviceAccountName: internal-app
      containers:
        - name: issues
          image: jweissig/app:0.0.1

kubectl -n offsite apply --filename deployment-issues.yaml

kubectl -n offsite get pods

kubectl -n offsite logs \
    $(kubectl -n offsite get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
    --container vault-agent-init

kubectl exec -it vault-0 -- /bin/sh

vault write auth/kubernetes/role/offsite-app \
    bound_service_account_names=internal-app \
    bound_service_account_namespaces=offsite \
    policies=internal-app \
    ttl=24h

vi patch-issues.yaml
spec:
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/role: 'offsite-app'
        vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}

kubectl -n offsite patch deployment issues --patch "$(cat patch-issues.yaml)"

kubectl -n offsite exec \
    $(kubectl -n offsite get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
    --container issues -- cat /vault/secrets/database-config.txt




[anjack@60master sidecar]$ kubectl apply --filename pod-payroll.yaml
pod/payroll created
[anjack@60master sidecar]$ kubectl get pods
NAME                                    READY   STATUS    RESTARTS   AGE
orgchart-696cf797b5-r6pzg               2/2     Running   0          2m47s
payroll                                 2/2     Running   0          17s
vault-0                                 1/1     Running   0          60m
vault-1                                 1/1     Running   0          60m
vault-2                                 1/1     Running   0          60m
vault-agent-injector-77fd4cb69f-pfrfg   1/1     Running   0          60m
[anjack@60master sidecar]$ kubectl exec \
>     payroll \
>     --container payroll -- cat /vault/secrets/database-config.txt
postgresql://db-readonly-username:db-secret-password@postgres:5432/wizard[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$ kubectl -n offsite create sa internal-app
error: failed to create serviceaccount: namespaces "offsite" not found
[anjack@60master sidecar]$ kubectl create namespace offsite
namespace/offsite created
[anjack@60master sidecar]$ kubectl -n offsite create sa internal-app
serviceaccount/internal-app created
[anjack@60master sidecar]$ pwd
/home/anjack/vault/sidecar
[anjack@60master sidecar]$ ls
deployment-issues.yaml  deployment-orgchart.yaml  patch-inject-secrets-as-template.yaml  patch-inject-secrets.yaml  pod-payroll.yaml
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$ kubectl -n offsite apply --filename deployment-issues.yaml
deployment.apps/issues created
[anjack@60master sidecar]$ kubectl -n offsite get pods
NAME                      READY   STATUS     RESTARTS   AGE
issues-544fcf6889-j8v4s   0/2     Init:0/1   0          36s
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$ kubectl -n offsite logs \
>     $(kubectl -n offsite get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container vault-agent-init
==> Vault agent started! Log data will stream in below:

==> Vault agent configuration:

                     Cgo: disabled
               Log Level: info
                 Version: Vault v1.12.1, built 2022-10-27T12:32:05Z
             Version Sha: e34f8a14fb7a88af4640b09f3ddbb5646b946d9c

2022-12-12T07:00:50.055Z [INFO]  sink.file: creating file sink
2022-12-12T07:00:50.055Z [INFO]  sink.file: file sink configured: path=/home/vault/.vault-token mode=-rw-r-----
2022-12-12T07:00:50.055Z [INFO]  template.server: starting template server
2022-12-12T07:00:50.055Z [INFO] (runner) creating new runner (dry: false, once: false)
2022-12-12T07:00:50.056Z [INFO] (runner) creating watcher
2022-12-12T07:00:50.056Z [INFO]  auth.handler: starting auth handler
2022-12-12T07:00:50.056Z [INFO]  auth.handler: authenticating
2022-12-12T07:00:50.056Z [INFO]  sink.server: starting sink server
2022-12-12T07:00:50.059Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=1s
2022-12-12T07:00:51.060Z [INFO]  auth.handler: authenticating
2022-12-12T07:00:51.065Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=1.93s
2022-12-12T07:00:53.002Z [INFO]  auth.handler: authenticating
2022-12-12T07:00:53.003Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=3.44s
2022-12-12T07:00:56.446Z [INFO]  auth.handler: authenticating
2022-12-12T07:00:56.449Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=5.48s
2022-12-12T07:01:01.933Z [INFO]  auth.handler: authenticating
2022-12-12T07:01:01.936Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=9.79s
2022-12-12T07:01:11.729Z [INFO]  auth.handler: authenticating
2022-12-12T07:01:11.732Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=17.52s
2022-12-12T07:01:29.257Z [INFO]  auth.handler: authenticating
2022-12-12T07:01:29.260Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=30.74s
2022-12-12T07:02:00.001Z [INFO]  auth.handler: authenticating
2022-12-12T07:02:00.005Z [ERROR] auth.handler: error authenticating:
  error=
  | Error making API request.
  |
  | URL: PUT http://vault.default.svc:8200/v1/auth/kubernetes/login
  | Code: 403. Errors:
  |
  | * namespace not authorized
   backoff=52.6s
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$ kubectl exec -it vault-0 -- /bin/sh
/ $
/ $
/ $ vault write auth/kubernetes/role/offsite-app \
>     bound_service_account_names=internal-app \
>     bound_service_account_namespaces=offsite \
>     policies=internal-app \
>     ttl=24h
Success! Data written to: auth/kubernetes/role/offsite-app
/ $
/ $ exit
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$ ls
deployment-issues.yaml    patch-inject-secrets-as-template.yaml  patch-issues.yaml
deployment-orgchart.yaml  patch-inject-secrets.yaml              pod-payroll.yaml
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$ kubectl -n offsite patch deployment issues --patch "$(cat patch-issues.yaml)"
deployment.apps/issues patched
[anjack@60master sidecar]$ kubectl -n offsite get pods
NAME                      READY   STATUS    RESTARTS   AGE
issues-7f5d8698f6-5zwvs   2/2     Running   0          20s
[anjack@60master sidecar]$
[anjack@60master sidecar]$ kubectl -n offsite exec \
>     $(kubectl -n offsite get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container issues -- cat /vault/secrets/database-config.txt
postgresql://db-readonly-username:db-secret-password@postgres:5432/wizard[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$
[anjack@60master sidecar]$

