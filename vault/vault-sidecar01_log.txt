
[anjack@60master raft]$ kubectl exec -it vault-0 -- /bin/sh
Error from server (NotFound): pods "vault-0" not found
[anjack@60master raft]$ kubectl -n vaulet get pods
NAME                                    READY   STATUS    RESTARTS   AGE
vault-0                                 1/1     Running   0          49m
vault-1                                 1/1     Running   0          49m
vault-2                                 1/1     Running   0          49m
vault-agent-injector-59b9c84fd8-zdnkq   1/1     Running   0          49m
[anjack@60master raft]$ kubectl -n vault exec -it vault-0 -- /bin/sh
/ $ / $ vault secrets enable -path=internal kv-v2
Success! Enabled the kv-v2 secrets engine at: internal/
/ $ vault kv put internal/database/config username="db-readonly-username" password="db-secret-password"
======== Secret Path ========
internal/data/database/config

======= Metadata =======
Key                Value
---                -----
created_time       2022-12-13T01:33:59.780611669Z
custom_metadata    <nil>
deletion_time      n/a
destroyed          false
version            1
/ $ vault kv get internal/database/config
======== Secret Path ========
internal/data/database/config

======= Metadata =======
Key                Value
---                -----
created_time       2022-12-13T01:33:59.780611669Z
custom_metadata    <nil>
deletion_time      n/a
destroyed          false
version            1

====== Data ======
Key         Value
---         -----
password    db-secret-password
username    db-readonly-username
/ $ 
/ $ vault auth enable kubernetes
Error enabling kubernetes auth: Error making API request.

URL: POST http://127.0.0.1:8200/v1/sys/auth/kubernetes
Code: 400. Errors:

* path is already in use at kubernetes/
/ $ vault auth list
Path           Type          Accessor                    Description                Version
----           ----          --------                    -----------                -------
kubernetes/    kubernetes    auth_kubernetes_bcc52953    n/a                        n/a
token/         token         auth_token_a679f10c         token based credentials    n/a
/ $ vault write auth/kubernetes/config \
>     kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443"
Success! Data written to: auth/kubernetes/config
/ $ vault policy write internal-app - <<EOF
> path "internal/data/database/config" {
>   capabilities = ["read"]
> }
> EOF
Success! Uploaded policy: internal-app
/ $ vault write auth/kubernetes/role/internal-app \
>     bound_service_account_names=internal-app \
>     bound_service_account_namespaces=webapp \
>     policies=internal-app \
>     ttl=24h
Success! Data written to: auth/kubernetes/role/internal-app
/ $ exit
[anjack@60master raft]$ 
[anjack@60master raft]$ 
[anjack@60master raft]$ kubectl -n webapp get serviceaccounts
NAME      SECRETS   AGE
default   0         34m
webapp    0         32m
[anjack@60master raft]$ kubectl -n webapp create sa internal-app
serviceaccount/internal-app created
[anjack@60master raft]$ kubectl -n webapp get serviceaccounts
NAME           SECRETS   AGE
default        0         35m
internal-app   0         7s
webapp         0         33m
[anjack@60master raft]$ ls
cluster-keys.json  deployment-01-webapp.yml  deployment-02-webapp.yml  helm-vault-raft-values.yml  storageclass-values.yml
[anjack@60master raft]$ 
[anjack@60master raft]$ 
[anjack@60master raft]$ cd ..
[anjack@60master vault]$ ls
raft  sidecar  vault-secret.yaml
[anjack@60master vault]$ 
[anjack@60master vault]$ cd sidecar/
[anjack@60master sidecar]$ ls
deployment-issues.yaml    deployment-website.yaml                patch-inject-secrets.yaml  patch-website.yaml
deployment-orgchart.yaml  patch-inject-secrets-as-template.yaml  patch-issues.yaml          pod-payroll.yaml
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ cat deployment-issues.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: issues
  labels:
    app: issues
spec:
  selector:
    matchLabels:
      app: issues
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        vault.hashicorp.com/agent-inject-secret-database-config.txt: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}
      labels:
        app: issues
    spec:
      serviceAccountName: internal-app
      containers:
        - name: issues
          image: jweissig/app:0.0.1
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ kubectl -n webapp apply -f deployment-issues.yaml
deployment.apps/issues created
[anjack@60master sidecar]$ kubectl -n webapp get pods
NAME                      READY   STATUS    RESTARTS   AGE
issues-544fcf6889-mjpqd   2/2     Running   0          26s
webapp-74996f8d55-cvzbb   1/1     Running   0          34m
[anjack@60master sidecar]$ kubectl -n offsite logs \
>     $(kubectl -n offsite get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container vault-agent-init
error: error executing jsonpath "{.items[0].metadata.name}": Error executing template: array index out of bounds: index 0, length 0. Printing more information for debugging the template:
	template was:
		{.items[0].metadata.name}
	object given to jsonpath engine was:
		map[string]interface {}{"apiVersion":"v1", "items":[]interface {}{}, "kind":"List", "metadata":map[string]interface {}{"resourceVersion":""}}


error: expected 'logs [-f] [-p] (POD | TYPE/NAME) [-c CONTAINER]'.
POD or TYPE/NAME is a required argument for the logs command
See 'kubectl logs -h' for help and examples
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ kubectl -n webapp logs \
>     $(kubectl -n offsite get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container vault-agent-init
error: error executing jsonpath "{.items[0].metadata.name}": Error executing template: array index out of bounds: index 0, length 0. Printing more information for debugging the template:
	template was:
		{.items[0].metadata.name}
	object given to jsonpath engine was:
		map[string]interface {}{"apiVersion":"v1", "items":[]interface {}{}, "kind":"List", "metadata":map[string]interface {}{"resourceVersion":""}}


error: expected 'logs [-f] [-p] (POD | TYPE/NAME) [-c CONTAINER]'.
POD or TYPE/NAME is a required argument for the logs command
See 'kubectl logs -h' for help and examples
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ kubectl -n webapp logs \
>     $(kubectl -n webapp get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container vault-agent-init
==> Vault agent started! Log data will stream in below:

==> Vault agent configuration:

                     Cgo: disabled
               Log Level: info
                 Version: Vault v1.12.1, built 2022-10-27T12:32:05Z
             Version Sha: e34f8a14fb7a88af4640b09f3ddbb5646b946d9c

2022-12-13T01:44:23.199Z [INFO]  sink.file: creating file sink
2022-12-13T01:44:23.200Z [INFO]  sink.file: file sink configured: path=/home/vault/.vault-token mode=-rw-r-----
2022-12-13T01:44:23.201Z [INFO]  template.server: starting template server
2022-12-13T01:44:23.201Z [INFO] (runner) creating new runner (dry: false, once: false)
2022-12-13T01:44:23.202Z [INFO]  auth.handler: starting auth handler
2022-12-13T01:44:23.202Z [INFO]  auth.handler: authenticating
2022-12-13T01:44:23.204Z [INFO] (runner) creating watcher
2022-12-13T01:44:23.204Z [INFO]  sink.server: starting sink server
2022-12-13T01:44:24.725Z [INFO]  auth.handler: authentication successful, sending token to sinks
2022-12-13T01:44:24.725Z [INFO]  auth.handler: starting renewal process
2022-12-13T01:44:24.726Z [INFO]  sink.file: token written: path=/home/vault/.vault-token
2022-12-13T01:44:24.726Z [INFO]  sink.server: sink server stopped
2022-12-13T01:44:24.726Z [INFO]  sinks finished, exiting
2022-12-13T01:44:24.726Z [INFO]  template.server: template server received new token
2022-12-13T01:44:24.726Z [INFO] (runner) stopping
2022-12-13T01:44:24.726Z [INFO] (runner) creating new runner (dry: false, once: false)
2022-12-13T01:44:24.726Z [INFO] (runner) creating watcher
2022-12-13T01:44:24.726Z [INFO] (runner) starting
2022-12-13T01:44:24.753Z [INFO] (runner) rendered "(dynamic)" => "/vault/secrets/database-config.txt"
2022-12-13T01:44:24.753Z [INFO] (runner) stopping
2022-12-13T01:44:24.754Z [INFO]  template.server: template server stopped
2022-12-13T01:44:24.754Z [INFO] (runner) received finish
2022-12-13T01:44:24.754Z [INFO]  auth.handler: shutdown triggered, stopping lifetime watcher
2022-12-13T01:44:24.754Z [INFO]  auth.handler: auth handler stopped
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ kubectl -n webapp exec \
>     $(kubectl -n webapp get pod -l app=issues -o jsonpath="{.items[0].metadata.name}") \
>     --container issues -- cat /vault/secrets/database-config.txt
postgresql://db-readonly-username:db-secret-password@postgres:5432/wizard[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 
[anjack@60master sidecar]$ 