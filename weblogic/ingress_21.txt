ホストベースのセキュア ルーティング
このサンプルでは、​​HTTPS エンドポイントを使用して 2 つの WebLogic ドメイン上のアプリケーションにアクセスする方法を示します。
TLS 対応のイングレス コントローラーをインストールします。

まず、TLS 証明書を使用して 2 つのシークレットを作成する必要があります。
1 つは共通名domain1.org、もう 1 つは共通名domain2.orgです。
opensslデモンストレーション目的で自己署名証明書を生成するために使用します。
TLS シークレットは、WebLogic ドメインと同じ名前空間にある必要があることに注意してください。

# create a TLS secret for domain1
$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj "/CN=domain1.org"
$ kubectl -n weblogic-domain1 create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt

# create a TLS secret for domain2
$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj "/CN=domain2.org"
$ kubectl -n weblogic-domain2 create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt


# Deploy the TLS ingress controller.
$ kubectl create -f samples/tls.yaml
ingress.networking.k8s.io/domain1-ingress-tls created
ingress.networking.k8s.io/domain2-ingress-tls created
これで、HTTP ヘッダーのホスト名を使用して、WebLogic ドメイン上のアプリケーションにアクセスできるようになりました。
イングレス コントローラーのセキュア ポートは、名前空間のnginx-operatorサービスから動的に取得できます。nginx

# Get the ingress controller secure web port
$ export TLS_PORT=$(kubectl -n nginx get service nginx-operator-ingress-nginx-controller -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
$ curl -k -H 'host: domain1.org' https://${HOSTNAME}:${TLS_PORT}/testwebapp/
$ curl -k -H 'host: domain2.org' https://${HOSTNAME}:${TLS_PORT}/testwebapp/


openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls1.key -out /tmp/tls1.crt -subj "/CN=domain1.org"
kubectl -n sample-domain1-ns create secret tls domain1-tls-cert --key /tmp/tls1.key --cert /tmp/tls1.crt

openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls2.key -out /tmp/tls2.crt -subj "/CN=domain2.org"
kubectl -n sample-domain2-ns create secret tls domain2-tls-cert --key /tmp/tls2.key --cert /tmp/tls2.crt

kubectl create -f /home/anjack/testdomain/tls.yaml

export TLS_PORT=$(kubectl -n nginx get service nginx-operator-ingress-nginx-controller -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')

curl -k -H 'host: domain1.org' https://localhost:${TLS_PORT}/myapp_war/index.jsp
curl -k -H 'host: domain2.org' https://localhost:${TLS_PORT}/myapp_war/index.jsp



[anjack@120master testdomain]$ ls
host-routing.yaml  host-routing01.yaml  host-routing02.yaml  mii-initial-d1-WLS-v1.yaml  mii-initial-d2-WLS-v1.yaml  path-routing.yaml  tls.yaml
[anjack@120master testdomain]$ kubectl apply -f host-routing.yaml
Error from server (BadRequest): error when creating "host-routing.yaml": admission webhook "validate.nginx.ingress.kubernetes.io" denied the request: host "domain1.org" and path "/" is already defined in ingress sample-domain1-ns/nginx-ssl-1
Error from server (BadRequest): error when creating "host-routing.yaml": admission webhook "validate.nginx.ingress.kubernetes.io" denied the request: host "domain2.org" and path "/" is already defined in ingress sample-domain2-ns/nginx-ssl-2
